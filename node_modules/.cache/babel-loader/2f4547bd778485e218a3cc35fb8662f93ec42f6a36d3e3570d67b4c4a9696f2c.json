{"ast":null,"code":"import { NOT_EKLE, NOT_SIL } from \"./actions\";\nconst s10chLocalStorageKey = \"s10ch\";\nconst baslangicDegerleri = {\n  notlar: [{\n    id: \"75g1IyB8JLehAr0Lr5v3p\",\n    date: \"Fri Feb 03 2023 09:40:27 GMT+0300 (GMT+03:00)\",\n    body: \"Bugün hava çok güzel!|En iyi arkadaşımın en iyi arkadaşı olduğumu öğrendim :)|Kedim iyileşti!\"\n  }]\n};\nfunction localStorageStateYaz(key, data) {\n  localStorage.setItem(key, JSON.stringify(data));\n}\nfunction localStorageStateOku(key) {\n  return JSON.parse(localStorage.getItem(key));\n}\nfunction baslangicNotlariniGetir(key) {\n  const eskiNotlar = localStorage.getItem(key);\n  if (eskiNotlar) {\n    return localStorageStateOku(key);\n  } else {\n    return baslangicDegerleri;\n  }\n}\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : baslangicNotlariniGetir(s10chLocalStorageKey);\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case NOT_EKLE:\n      const updatedState = {\n        ...state,\n        notlar: [action.payload, ...state.notlar]\n      };\n      localStorageStateYaz(s10chLocalStorageKey, updatedState);\n      return updatedState;\n    case NOT_SIL:\n      const updatedState2 = {\n        ...state,\n        notlar: state.notlar.filter(not => not.id !== action.payload)\n      };\n      localStorageStateYaz(s10chLocalStorageKey, updatedState2);\n      return updatedState2;\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["NOT_EKLE","NOT_SIL","s10chLocalStorageKey","baslangicDegerleri","notlar","id","date","body","localStorageStateYaz","key","data","localStorage","setItem","JSON","stringify","localStorageStateOku","parse","getItem","baslangicNotlariniGetir","eskiNotlar","reducer","state","arguments","length","undefined","action","type","updatedState","payload","updatedState2","filter","not"],"sources":["C:/Users/Gürkan/fsweb-s10-challenge/src/reducers.js"],"sourcesContent":["import { NOT_EKLE, NOT_SIL } from \"./actions\";\r\nconst s10chLocalStorageKey = \"s10ch\";\r\nconst baslangicDegerleri = {\r\n  notlar: [\r\n    {\r\n      id: \"75g1IyB8JLehAr0Lr5v3p\",\r\n      date: \"Fri Feb 03 2023 09:40:27 GMT+0300 (GMT+03:00)\",\r\n      body: \"Bugün hava çok güzel!|En iyi arkadaşımın en iyi arkadaşı olduğumu öğrendim :)|Kedim iyileşti!\",\r\n    },\r\n  ],\r\n};\r\n\r\nfunction localStorageStateYaz(key, data) {\r\n  localStorage.setItem(key, JSON.stringify(data));\r\n}\r\n\r\nfunction localStorageStateOku(key) {\r\n  return JSON.parse(localStorage.getItem(key));\r\n}\r\n\r\nfunction baslangicNotlariniGetir(key) {\r\n  const eskiNotlar = localStorage.getItem(key);\r\n\r\n  if (eskiNotlar) {\r\n    return localStorageStateOku(key);\r\n  } else {\r\n    return baslangicDegerleri\r\n  }\r\n}\r\n\r\nconst reducer =(state= baslangicNotlariniGetir(s10chLocalStorageKey), action) =>{\r\n  switch(action.type){\r\n    case NOT_EKLE :\r\n    const updatedState = {...state, notlar: [action.payload,...state.notlar, ]};\r\n    localStorageStateYaz(s10chLocalStorageKey, updatedState);\r\n    return updatedState;\r\n    case NOT_SIL :\r\n      const updatedState2 = {...state, notlar:state.notlar.filter(not=>not.id!==action.payload)}\r\n      localStorageStateYaz(s10chLocalStorageKey, updatedState2);\r\n      return updatedState2;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default reducer;"],"mappings":"AAAA,SAASA,QAAQ,EAAEC,OAAO,QAAQ,WAAW;AAC7C,MAAMC,oBAAoB,GAAG,OAAO;AACpC,MAAMC,kBAAkB,GAAG;EACzBC,MAAM,EAAE,CACN;IACEC,EAAE,EAAE,uBAAuB;IAC3BC,IAAI,EAAE,+CAA+C;IACrDC,IAAI,EAAE;EACR,CAAC;AAEL,CAAC;AAED,SAASC,oBAAoBA,CAACC,GAAG,EAAEC,IAAI,EAAE;EACvCC,YAAY,CAACC,OAAO,CAACH,GAAG,EAAEI,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;AACjD;AAEA,SAASK,oBAAoBA,CAACN,GAAG,EAAE;EACjC,OAAOI,IAAI,CAACG,KAAK,CAACL,YAAY,CAACM,OAAO,CAACR,GAAG,CAAC,CAAC;AAC9C;AAEA,SAASS,uBAAuBA,CAACT,GAAG,EAAE;EACpC,MAAMU,UAAU,GAAGR,YAAY,CAACM,OAAO,CAACR,GAAG,CAAC;EAE5C,IAAIU,UAAU,EAAE;IACd,OAAOJ,oBAAoB,CAACN,GAAG,CAAC;EAClC,CAAC,MAAM;IACL,OAAON,kBAAkB;EAC3B;AACF;AAEA,MAAMiB,OAAO,GAAE,SAAAA,CAAA,EAAiE;EAAA,IAAhEC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAEJ,uBAAuB,CAAChB,oBAAoB,CAAC;EAAA,IAAEuB,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC1E,QAAOC,MAAM,CAACC,IAAI;IAChB,KAAK1B,QAAQ;MACb,MAAM2B,YAAY,GAAG;QAAC,GAAGN,KAAK;QAAEjB,MAAM,EAAE,CAACqB,MAAM,CAACG,OAAO,EAAC,GAAGP,KAAK,CAACjB,MAAM;MAAG,CAAC;MAC3EI,oBAAoB,CAACN,oBAAoB,EAAEyB,YAAY,CAAC;MACxD,OAAOA,YAAY;IACnB,KAAK1B,OAAO;MACV,MAAM4B,aAAa,GAAG;QAAC,GAAGR,KAAK;QAAEjB,MAAM,EAACiB,KAAK,CAACjB,MAAM,CAAC0B,MAAM,CAACC,GAAG,IAAEA,GAAG,CAAC1B,EAAE,KAAGoB,MAAM,CAACG,OAAO;MAAC,CAAC;MAC1FpB,oBAAoB,CAACN,oBAAoB,EAAE2B,aAAa,CAAC;MACzD,OAAOA,aAAa;IACtB;MACE,OAAOR,KAAK;EAChB;AACF,CAAC;AACD,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}